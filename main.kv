# #############################################################################
#
#  main.kv - Kivy-Language GUI definition for AssignmentTracker app
#
#  AssignmentTracker is developed for Nevada County Sheriff's Search and Rescue
#    Copyright (c) 2020 Tom Grundy
#
#  http://github.com/ncssar/AssignmentTracker
#
#  Contact the author at nccaves@yahoo.com
#   Attribution, feedback, bug reports and feature requests are appreciated
#
# see main.py for revision history
#
# #############################################################################

#:import Window kivy.core.window.Window

# Popup widget with icon(s) at the top right
# default popup kv code is in site_packages/kivy/data/style.kv
# replace the popup label with a BoxLayout, the leftmost widget of which is the label,
#  followed by a StackLayout with any number of icon widgets pushed to the right side
# notice you also need to include the ModalWidget section, verbatim, to get
#  the opaque dialog over faded background

<-PopupWithIcons>:
    canvas:
        Color:
            rgba: root.background_color[:3] + [root.background_color[-1] * self._anim_alpha]
        Rectangle:
            size: self._window.size if self._window else (0, 0)

        Color:
            rgb: 1, 1, 1
        BorderImage:
            source: root.background
            border: root.border
            pos: self.pos
            size: self.size
            
    _container: container
    GridLayout:
        padding: '12dp'
        cols: 1
        size_hint: None, None
        pos: root.pos
        size: root.size
        # size: (root.width, self.minimum_height+25)
        # # size_hint: (1, None)
        # # height: self.minimum_height + 25
        BoxLayout:
            orientation: 'horizontal'
            id: topBar
            size_hint_y: None
            height: 24
            spacing: 3
            
            Label:
                text: root.title
                color: root.title_color
                size_hint_y: None
                height: self.texture_size[1] + dp(16)
                text_size: self.width - dp(16), None
                font_size: root.title_size
                font_name: root.title_font
                halign: root.title_align
                
            StackLayout:
                height: self.parent.height
                orientation: 'bt-rl'
                id: iconBox
                spacing: 3
                
                # add icons from code with something like this:
                # self.popup.ids.iconBox.add_widget(Image(source='images/cloud.png',width=30,size_hint_x=None))

#                 Image:
#                     source: 'images/cloud.png'
#                     width: 30
#                     size_hint_x: None

        Widget:
            size_hint_y: None
            height: dp(4)
            canvas:
                Color:
                    rgba: root.separator_color
                Rectangle:
                    pos: self.x, self.y + root.separator_height / 2.
                    size: self.width, root.separator_height

        BoxLayout:
            # size_hint: (1, None)
            # height: self.minimum_height + 25
            id: container

<ExpandingPopup@Popup>:
    height: theBox.height+50
    size_hint: (0.8,None)
    text: '123'
    BoxLayout:
        orientation: 'vertical'
        id: theBox
        size_hint: (1, None)
        height: self.minimum_height + 25
        Label:
            id: theLabel
            size_hint_y: None
            height: self.texture_size[1]
            text_size: (self.width, None)
            text: self.parent.parent.parent.parent.text
            padding: (0, 10)

# Label with text wrap; height grows as needed to accomodate wrapped text
# from https://blog.kivy.org/2014/07/wrapping-text-in-kivys-label/
<WrappedLabel@Label>:
    text_size: self.width,None
    size_hint_y: None
    height: self.texture_size[1]

<ButtonWithImage@Button>:
    source: None
    Image:
        source: self.parent.source
        pos: self.parent.pos
        height: self.parent.height*0.75

<ButtonWithFourImages@Button>:
    source1: 'images/blank_64x64.png'
    source2: 'images/blank_64x64.png'
    source3: 'images/blank_64x64.png'
    source4: 'images/blank_64x64.png'
    BoxLayout:
        orientation: 'horizontal'
        pos: self.parent.pos
        height: self.parent.height
        Image:
            source: self.parent.parent.source1
            pos: self.parent.pos
            height: self.parent.height*0.75
        Image:
            source: self.parent.parent.source2
            pos: self.parent.parent.pos
            height: self.parent.height*0.75
        Image:
            source: self.parent.parent.source3
            pos: self.parent.parent.pos
            height: self.parent.height*0.75
        Image:
            source: self.parent.parent.source4
            pos: self.parent.parent.pos
            height: self.parent.height*0.75
            
<MyButton@Button>:
    text: 'My Key'
    font_size: min(self.height*app.defaultTextHeightMultiplier,self.parent.parent.height*0.05)
    halign:'center'
    valign:'middle'
    on_press: app.keyDown(self.text)

<MyRV@RecycleView>:
    viewclass: 'Label'
    RecycleGridLayout:
        cols: 1
        default_size: None, dp(26)
        default_size_hint: 1, None
        size_hint_y: None
        height: self.minimum_height
        orientation: 'vertical'

<YesNoSwitch@Switch>:
    canvas:
        Color:
            rgb: 1,1,1
        Rectangle:
            source: 'images/switch.jpg'
            size: sp(83),sp(32)
            pos: int(self.center_x-sp(41)),int(self.center_y-sp(16))
        Rectangle:
            source: 'images/switch_slider.jpg' # make or download your slider jpg
            size: sp(43), sp(32)
            pos: int(self.center_x - sp(41) + self.active_norm_pos * sp(41)), int(self.center_y - sp(16))
            
# <KeypadButton@Button>:
#     id: keypadbutton
#     size_hint: None, None
#     height:'64sp'
#     width:'64sp'
#     pos: int(self.center_x - sp(64) + self.active_norm_pos * sp(64)), int(self.center_y - sp(32))
#     background_normal: 'images/keypad_64x64_white.png'
#     on_press:app.switchToBlankKeypad()     

<KeypadButton@Button>:
    id: keypadbutton
    on_press:app.switchToBlankKeypad()
    size_hint:None,1
    height: self.parent.height
    background_color:0,0,0,1
    Image:
        source: 'images/keypad_white_64x64.png'
#         x: self.parent.x + (self.parent.width/2) - (self.width/2)
#         y: self.parent.y + (self.parent.height/2) - (self.height/2)
        center: self.parent.center
   
<ListButton@Button>:
    size_hint: None, None
    height:64
    width:64
    background_normal: 'images/list_white_64x64.png'
    on_press:app.showList()

<DetailsButton@Button>:
    size_hint: None, None
    height:64
    width:64
    background_normal: 'images/gear_white_64x64.png'
    on_press:app.showDetails()

<SelectableLabel>:
    bg: 0,0,0,0
    src: ''
    canvas.before:
        Color:
            rgba: (0,0.9,0.1,0.3) if self.selected else self.bg
        Rectangle:
            pos: self.pos
            size: self.size
    canvas:
        Rectangle:
            source: root.src
            pos:(self.right-30,self.top-self.height+10)
            size:(0,0) if root.src=='' else (14,14)
            
<ClockText>:

<TopBar>:
    size_hint_y: 0.06
    spacing: 10
    BoxLayout:
        orientation: 'horizontal'
        Label:
            id: headerLabel
            halign: 'left'
            font_size: self.height*0.2
            text: ''
            size_x: 500
#                 size_hint_x: 0.2
        MyButton:
            id: syncButton
            text: ''
            background_normal: ''
            background_color: (0,0,0,1)
            color: (0,0,0,0)
            size_x:120
            Image:
                id: syncButtonImage
                source: 'images/cloud.png'
                x: self.parent.x + (self.parent.width/2) - (self.width/2)
                y: self.parent.y
                height: self.parent.height*0.5
#             Label:
#                 id: syncLabel
#                 halign: 'left'
#                 font_size: self.height*0.2
#                 text: ''
#                 size_x: 300
#                 size_hint_x: 0.2
#             Label:
#                 size_hint_x: 0.2
        ClockText:
            id: clocktext
            font_size: self.height*0.4
#                 size_x: 400
#                 size_hint_x: 0.4
#             Label:
#                 size_hint_x: 0.8
        # show and hide the buttons depending on current screen
        ListButton:
            id: listbutton
        KeypadButton:
            id: keypadbutton
        DetailsButton:
            id: detailsbutton

<ViewSwitcher@BoxLayout>:
    BoxLayout:
        orientation: 'horizontal'
        Button:
            id: assignmentsViewButton
            text: 'Assignments'
            markup: True
            halign: 'center'
            valign: 'bottom'
            line_height: 0.7
            on_press: app.showAssignments()
        Button:
            id: teamsViewButton
            text: 'Teams'
            markup: True
            halign: 'center'
            valign: 'bottom'
            line_height: 0.7
            on_press: app.showTeams()

<DeviceHeader@BoxLayout>:
    BoxLayout:
        orientation: 'horizontal'
        BoxLayout:
            orientation: 'vertical'
            Label:
                text: 'This device is assigned to'
                font_size: '10sp'
            Label:
                id: deviceLabel
                text: 'N/A'
                font_size: '50sp'
        Button:
            size_hint_x:None
            size_hint_y:None
            height:48
            width:48
            background_normal: './img/sartopo_refresh-48.png'
            on_press: app.stsSync()
        Button:
            size_hint_x:None
            size_hint_y:None
            height:48
            width:48
            background_normal: './img/options-icon-white-48.png'
            on_press: app.optionsPopup()

<TeamsScreen>:
    BoxLayout:
        orientation: 'vertical'
        DeviceHeader:
            size_hint_y: None
            id: deviceHeader
        ViewSwitcher:
            size_hint_y: 0.1
            id: viewSwitcher
        Button:
            size_hint_y: 0.1
            text: 'New Team'
            on_press: app.showNewTeam()
        BoxLayout:
            size_hint_y: None
            height: 30
            orientation: 'horizontal'
            Label:
                text: 'Team'
            Label:
                text: 'Current'
            Label:
                text: 'Status'
            Label:
                text: 'Resource'
            Label:
                text: 'Previous'
        BoxLayout:
            size_hint_y: 0.9
            RecycleView:
                viewclass: 'SelectableLabel'
                id: teamsRV
                data: root.teamsRVData
                SelectableRecycleGridLayout:
                    id: teamsLayout
                    cols: 5
                    size_hint_y: None
                    default_size: None, dp(32)
                    default_size_hint: 1, None
                    height: self.minimum_height
                    multiselect: False

<AssignmentsScreen>:
    BoxLayout:
        orientation: 'vertical'
        DeviceHeader:
            size_hint_y: None
            id: deviceHeader
        ViewSwitcher:
            size_hint_y: 0.1
            id: viewSwitcher
        Button:
            size_hint_y: 0.1
            text: 'New Assignment'
            on_press: app.showNewAssignment()
        BoxLayout:
            size_hint_y: None
            height: 30
            orientation: 'horizontal'
            Label:
                text: 'Assignment'
            Label:
                text: 'Team'
            Label:
                text: 'Status'
            Label:
                text: 'Resource'
        BoxLayout:
            size_hint_y: 0.9
            RecycleView:
                viewclass: 'SelectableLabel'
                id: assignmentsRV
                data: root.assignmentsRVData
                SelectableRecycleGridLayout:
                    id: assignmentsLayout
                    cols: 4
                    size_hint_y: None
                    default_size: None, dp(32)
                    default_size_hint: 1, None
                    height: self.minimum_height
                    multiselect: False

# from https://kivy.org/doc/stable/api-kivy.uix.label.html
# Define your background color Template
<BackgroundColor@Widget>:
    background_color: 1, 1, 1, 1
    canvas.before:
        Color:
            rgba: root.background_color
        Rectangle:
            size: self.size
            pos: self.pos
# Now you can simply Mix the `BackgroundColor` class with almost
# any other widget... to give it a background.
<BackgroundLabel@Label+BackgroundColor>:
    background_color: 0, 0, 0, 0
    # Default the background color for this label
    # to r 0, g 0, b 0, a 0
# Use the BackgroundLabel any where in your kv code like below
# BackgroundLabel
#     text: 'Hello'
#     background_color: 1, 0, 0, 1

<PairingDetailScreen>:
    BoxLayout:
        orientation: 'vertical'
        BoxLayout:
            orientation: 'horizontal'
            BoxLayout:
                orientation: 'vertical'
                BackgroundLabel:
                    id: assignmentNameLabel
                    text: '--'
                    font_size: 70
                    size_hint_y: 0.55
                BackgroundLabel:
                    id: intendedResourceLabel
                    text: ''
                    font_size: 15
                    size_hint_y: 0.15
                BackgroundLabel:
                    text: 'Assignment'
                    font_size: 20
                    size_hint_y: 0.3
                BoxLayout:
                    orientation: 'horizontal'
                    size_hint: 0.7,0.3
                    pos_hint: {'center_x':0.5}
                    id: assignmentButtonBox
                    Button:
                        id: assignmentEditButton
                        text: 'Edit'
                        on_press: app.assignmentEdit()
                    Button:
                        id: assignmentDeleteButton
                        text: 'Delete'
                        on_press: app.assignmentDelete()
            BoxLayout:
                orientation: 'vertical'
                BackgroundLabel:
                    id: teamNameLabel
                    text: '--'
                    font_size: 70
                    size_hint_y: 0.55
                BackgroundLabel:
                    id: teamResourceLabel
                    text: ''
                    font_size: 15
                    size_hint_y: 0.15
                BackgroundLabel:
                    text: 'Team'
                    font_size: 20
                    size_hint_y: 0.3
                BoxLayout:
                    orientation: 'horizontal'
                    size_hint: 0.7,0.3
                    pos_hint: {'center_x':0.5}
                    id: teamButtonBox
                    Button:
                        id: teamEditButton
                        text: 'Edit'
                        on_press: app.teamEdit()
                    Button:
                        id: teamDeleteButton
                        text: 'Delete'
                        on_press: app.teamDelete()
        Label:
            id: statusLabel
            text: 'STATUS'
            font_size: 30
        BoxLayout:
            orientation: 'vertical'
            BoxLayout:
                orientation: 'horizontal'
                id: statusBox
                visible: True
                disabled: not self.visible
                size_hint_y: 1.2 if self.visible else 0
                opacity: 1 if self.visible else 0
                Label:
                    text: 'Change Status to'
                Spinner:
                    id: statusSpinner
                    text: 'A'
                    values: ['A','B','C']
                Button:
                    text: 'Apply'
                    on_press: app.changeTeamStatus()
            BoxLayout:
                orientation: 'horizontal'
                id: pairBox
                Button:
                    id: pairButton
                    text: 'Assign a team to this assignment'
                    on_press: app.showNewPairing()
            # BoxLayout:
            #     orientation: 'horizontal'
            #     id: newPairingBox
            #     visible: False
            #     disabled: not self.visible
            #     size_hint_y: 1 if self.visible else 0
            #     opacity: 1 of self.visible else 0
            #     Label:
            #         text: 'Assign to:'
            #         size_hint_x: 0.3
            #     Spinner:
            #         markup: True
            #         size_hint_x: 0.7
            #         halign: 'left'
            #         id: teamSpinner
            #         text: '101'
            #         values: ['101','102']
        Label:
            text: 'Activity Log'
        RecycleView:
            viewclass: 'Label'
            id: historyRV
            data: []
            halign: 'left'
            RecycleGridLayout:
                cols:3
                cols_minimum: {0:300,1:100,2:75}
                default_size: None, dp(20)
                default_size_hint: 1, None
                size_hint_y: None
                height: self.minimum_height
                halign: 'left'
        Button:
            text: 'Close'
            on_press: app.showPrevious()

<NewTeamScreen>:
    BoxLayout:
        orientation: 'vertical'
        Label:
            text: 'New Team'
            font_size: '30sp'
        BoxLayout:
            orientation: 'horizontal'
            Label:
                text: 'Team Name:'
            Spinner:
                id: nameSpinner
                text: '101'
                values: ['101','102','103']
        BoxLayout:
            orientation: 'horizontal'
            Label:
                text: 'Team Resource Type:'
            Spinner:
                id: resourceSpinner
                text: app.resourceTypes[0]
                values: app.resourceTypes
                # on_text: print("The spinner {} has text {}".format(self, self.text))
        Button:
            size_hint_y: 0.2
            text: 'Create Team'
            on_press: app.newTeam()
        Button:
            size_hint_y: 0.1
            text: 'Close'
            on_press: app.showTeams()

<NewAssignmentScreen>:
    BoxLayout:
        orientation: 'vertical'
        Label:
            text: 'New Assignment'
            font_size: '30sp'
        BoxLayout:
            orientation: 'horizontal'
            Label:
                text: 'Team Name:'
            Spinner:
                id: nameSpinner
                text: 'AA'
                values: ['AA','AB','AC']
        BoxLayout:
            orientation: 'horizontal'
            Label:
                text: 'Intended Resource:'
            Spinner:
                id: resourceSpinner
                text: app.resourceTypes[0]
                values: app.resourceTypes
                # on_text: print("The spinner {} has text {}".format(self, self.text))
        Button:
            size_hint_y: 0.2
            text: 'Create Assignment'
            on_press: app.newAssignment()
        Button:
            size_hint_y: 0.1
            text: 'Close'
            on_press: app.showAssignments()

<NewPairingScreen>:
    BoxLayout:
        orientation: 'vertical'
        Label:
            text: 'Create New Pairing'
            font_size: 50
            size_hint_y: 0.1
        BoxLayout:
            orientation: 'horizontal'
            id: knownBox
            size_hint_y: 0.2
            Label:
                id: knownLabel
                size_hint_x: 0.4
                text: 'Known:'
            Label:
                id: knownNameLabel
                text: '--'
                font_size: 60
        BoxLayout:
            orientation: 'horizontal'
            id: resourceBox
            size_hint_y: 0.15
            Label:
                id: resourceLabel
                size_hint_x: 0.4
                text: 'Resource:'
            Label:
                id: resourceNameLabel
                text: ''
                font_size: 30
        BoxLayout:
            orientation: 'horizontal'
            id: currentlyBox
            size_hint_y: 0.15
            Label:
                size_hint_x: 0.4
                text: 'Currently:'
            Label:
                id: currentlyLabel
                text: ''
                font_size: 30
        BoxLayout:
            orientation: 'horizontal'
            id: unknownBox
            size_hint_y: 0.2
            Label:
                size_hint_x: 0.4
                text: 'Assign to:'
            Spinner:
                markup: True
                halign: 'left'
                id: unknownSpinner
                text: '101'
                values: ['101','102']
        Button:
            text: 'OK'
            id: pairButton
            disabled: False
            size_hint_y: 0.1
            on_press: app.newPairing()
        Button:
            size_hint_y: 0.1
            text: 'Cancel'
            on_press: app.showPrevious()